[gd_scene load_steps=9 format=3 uid="uid://ce6uq2k2ykyix"]

[ext_resource type="PackedScene" uid="uid://ciflnhdm2rhx1" path="res://scenes/enemies/enemy.tscn" id="1_in750"]
[ext_resource type="SpriteFrames" uid="uid://cyx2w7omvan1c" path="res://assets/dump/dog.tres" id="2_5c477"]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_5c477"]

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_iotji"]
radius = 12.4135
height = 56.0

[sub_resource type="CircleShape2D" id="CircleShape2D_5c477"]
radius = 31.0161

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_5c477"]
radius = 17.0
height = 36.0

[sub_resource type="Shader" id="Shader_tihwb"]
code = "shader_type canvas_item;

// Drop shadow properties
uniform float shadow_offset_x : hint_range(-5.0, 5.0, 0.0001) = 0.003;
uniform float shadow_offset_y : hint_range(-5.0, 5.0, 0.0001) = 0.003;
uniform vec4 shadow_color : source_color = vec4(0.0, 0.0, 0.0, 0.6);
uniform float shadow_scale_x : hint_range(0.1, 2.0, 0.001) = 1.0;
uniform float shadow_scale_y : hint_range(0.1, 2.0, 0.001) = 0.5;
uniform bool use_original_alpha = true;

// Red tint properties
uniform bool enable_red_tint = false;
uniform float red_intensity : hint_range(0.0, 1.0, 0.01) = 0.7;
uniform vec4 red_color : source_color = vec4(1.0, 0.3, 0.3, 1.0);

void fragment() {
    vec2 center = vec2(0.5, 0.5);
    vec2 shadow_uv = (UV - center) / vec2(shadow_scale_x, shadow_scale_y) + center;
    shadow_uv += vec2(shadow_offset_x, shadow_offset_y);
    
    vec4 shadow = texture(TEXTURE, shadow_uv);
    vec4 sprite = texture(TEXTURE, UV);
    
    // Use original sprite's alpha shape for consistent shadow
    if (use_original_alpha) {
        shadow.a = sprite.a * shadow_color.a;
    } else {
        shadow.a *= shadow_color.a;
    }
    shadow.rgb = shadow_color.rgb;
    
    // Combine shadow with sprite
    vec4 final_color = mix(shadow, sprite, sprite.a);
    
    // Apply red tint if enabled
    if (enable_red_tint) {
        // Mix the sprite color with red, preserving alpha
        final_color.rgb = mix(final_color.rgb, red_color.rgb, red_intensity * sprite.a);
    }
    
    COLOR = final_color;
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_5c477"]
resource_local_to_scene = true
shader = SubResource("Shader_tihwb")
shader_parameter/shadow_offset_x = -1.265e-07
shader_parameter/shadow_offset_y = -0.1644
shader_parameter/shadow_color = Color(0, 0, 0, 0.627451)
shader_parameter/shadow_scale_x = 1.0
shader_parameter/shadow_scale_y = 0.5
shader_parameter/use_original_alpha = false
shader_parameter/enable_red_tint = false
shader_parameter/red_intensity = 0.7
shader_parameter/red_color = Color(1, 0.3, 0.3, 1)

[node name="Enemy" instance=ExtResource("1_in750")]

[node name="Skill" parent="." index="0"]
skill_name = "slash"
animation_name = "attack"
animation_speed = 1.0
anticipation_time = 0.02
contact_time = 0.4
base_damage = 20.0
display_hitbox = true
projectile_speed = 0.0

[node name="CollisionShape2D" parent="Skill/Hitbox" index="0"]
position = Vector2(13, 1)
shape = SubResource("RectangleShape2D_5c477")

[node name="CollisionShape2D" parent="." index="5"]
position = Vector2(0, 5)
scale = Vector2(0.966689, 0.120001)
shape = SubResource("CapsuleShape2D_iotji")

[node name="CollisionShape2D" parent="AttackArea" index="0"]
shape = SubResource("CircleShape2D_5c477")

[node name="CollisionShape2D" parent="Hitbox" index="0"]
position = Vector2(0, 2)
scale = Vector2(1, 0.360001)
shape = SubResource("CapsuleShape2D_5c477")

[node name="AnimatedSprite2D" parent="CharacterSpriteComponent" index="0"]
material = SubResource("ShaderMaterial_5c477")
position = Vector2(-1, -6)
sprite_frames = ExtResource("2_5c477")
animation = &"attack"
